list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})

# Make sure all libraries are -fPIC
set(CMAKE_POSITION_INDEPENDENT_CODE YES)

# ----------------------------------------------------------------------------------------------------------------------

# EnTT - https://github.com/skypjack/entt - License: MIT
add_subdirectory(entt/)

# fmtlib - https://github.com/fmtlib/fmt - License: modified MIT
add_subdirectory(fmt/)

# LuaBridge - https://github.com/vinniefalco/LuaBridge - License: modified MIT
set(LUABRIDGE_TESTING OFF CACHE BOOL "" FORCE)
add_subdirectory(luabridge/)

include(Lua.cmake)

# glm - https://github.com/g-truc/glm - License: MIT + Happy Bunny License
add_subdirectory(glm/)

if(NOT EMSCRIPTEN)
    # OpenAL Soft - https://github.com/kcat/openal-soft/ - License: LGPLv2
    set(ALSOFT_BACKEND_SDL2 OFF CACHE BOOL "" FORCE) # disable SDL2 mixer
    set(ALSOFT_EXAMPLES OFF CACHE BOOL "" FORCE)     # Examples use SDL1 which cause us redefinition issues with raylib
    add_subdirectory(openal-soft)
    set_target_properties(OpenAL PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY $<TARGET_FILE_DIR:BoydEngine>
        LIBRARY_OUTPUT_DIRECTORY $<TARGET_FILE_DIR:BoydEngine>
    )
else()
    # Emscripten ships with its own OpenAL implementation
    add_library(OpenAL INTERFACE)
    target_link_libraries(OpenAL INTERFACE -lopenal)
endif()

# Polyvox - https://bitbucket.org/volumesoffun/polyvox.git - License: zlib
set(ENABLE_EXAMPLES OFF CACHE BOOL "" FORCE)
set(ENABLE_DOCS OFF CACHE BOOL "" FORCE)
set(ENABLE_TESTS OFF CACHE BOOL "" FORCE)
add_subdirectory(polyvox)
add_library(polyvox INTERFACE)
target_include_directories(polyvox INTERFACE ${PolyVoxHeaders_SOURCE_DIR})

# ReactPhysics3dd - https://github.com/DanielChappuis/reactphysics3d - License: zlib
add_subdirectory(reactphysics3d)

# tinygltf - https://github.com/syoyo/tinygltf - License: MIT
set(TINYGLTF_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
add_library(tinygltf INTERFACE)
target_include_directories(tinygltf INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/tinygltf/")

# OpenGL ES 3.x
include(BoydOpenGL.cmake)

if(NOT EMSCRIPTEN)
    # FlextGL (autogenerated, GLFW, GLES 3.0) - https://github.com/mosra/flextGL - License: MIT
    add_library(flextGL STATIC flextgl/flextGL.c)
    target_include_directories(flextGL PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/flextgl/")
    target_link_libraries(flextGL PUBLIC glfw)

    # glfw - https://github.com/glfw/glfw - License: zlib
    set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
    set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
    set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
    add_subdirectory(glfw/)
else()
    # Emscripten ships with its own GLFW3 implementation, and flextGL is not needed
    add_library(glfw INTERFACE)
    target_link_libraries(glfw INTERFACE -lglfw3)
    target_compile_options(glfw INTERFACE "SHELL:-s USE_GLFW=3")
    target_link_options(glfw INTERFACE "SHELL:-s USE_GLFW=3")
    add_library(flextGL INTERFACE)
endif()
